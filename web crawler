import requests
from bs4 import BeautifulSoup

f = open("cocktail_recipes.txt", "w+")

url1_doc = requests.get("https://www.thespruceeats.com/a-to-z-cocktail-recipes-3962886")  # 對網站發出請求，並儲存回傳的html
soup1 = BeautifulSoup(url1_doc.text, "html.parser")  # 利用BeautifulSoup解析html

if url1_doc.status_code == 200:  # confirm status is successful
    cocktails = {}  # record all cocktail
    for ul in soup1.findAll("ul", {
        "class": "comp text-passage ordered-list__content-description mntl-sc-block mntl-sc-block-html"}):
        cocktail = {}  # {name, base_wine, total prepared time, rating times, rating, steps, ingredients[]}
        for li in ul.findAll("li"):
            # step1: find name and base wine
            # print(li.text) # test
            if "(" in li.text:
                cocktail["name"] = li.text.split("(")[0].replace('\n', '').replace('\u200b', '').replace('\xa0', '')
                # deal with lots of base wine
                if "," in li.text.split("(")[-1].split(")")[0]:
                    for o in li.text.split("(")[-1].split(")")[0].split(", "):  # (rum, tequila, vodka, and whiskey)
                        cocktail["base_wine"] = o.replace('\n', '').replace('\u200b', '').replace('\xa0', '').replace(
                            'and', '')
                        # print(cocktail["base_wine"])  # test
                elif "and" in li.text.split("(")[-1].split(")")[0]:  # (brandy and rum)
                    for k in li.text.split("(")[-1].split(")")[0].split(" and "):  # catious brandy! & grand marnier
                        # print(k)  # test
                        cocktail["base_wine"] = k.replace('\n', '').replace('\u200b', '').replace('\xa0', '')
                        # print(cocktail["base_wine"])  # test
                elif "or" in li.text.split("(")[-1].split(")")[0]:  # deal with "or" choose first one
                    cocktail["base_wine"] = li.text.split("(")[-1].split(")")[0].split("or")[0]
                    # print(li.text.split("(")[-1].split(")")[0].split("or")[0])  # test
                else:
                    cocktail["base_wine"] = li.text.split("(")[-1].split(")")[0]
                # print(cocktail["base_wine"])
            else:  # deal with no ()
                cocktail["name"] = li.text.replace('\n', '').replace('\u200b', '').replace('\xa0', '')
                cocktail["base_wine"] = "NA".replace('\n', '').replace('\u200b', '').replace('\xa0',
                                                                                             '')  # deal with shot!
            # step2: go to next page, including recipes and other information
            url2_doc = requests.get(li.find("a")['href'])
            soup2 = BeautifulSoup(url2_doc.text, "html.parser")

            # step3: how much is total prepared time?
            next_page_source_1 = soup2.find("div", {"class": "loc total-time project-meta__total-time"})
            if next_page_source_1 == None:  # deal with irregular pattern
                cocktail["total_prepared_time(min)"] = "NA"
            else:
                next_page_source_1 = next_page_source_1.find("span", {"class": "meta-text__data"})
                for total_prepared_time in next_page_source_1:
                    if "hrs" in total_prepared_time:
                        cocktail["total_prepared_time(min)"] = int(total_prepared_time.split(" hrs")[0]) * 60 + int((total_prepared_time.split(" hrs")[1]).split("mins")[0])
                    elif "hr" in total_prepared_time:
                        cocktail["total_prepared_time(min)"] = int(total_prepared_time.split(" hr")[0]) * 60 + int(total_prepared_time.split(" mins")[-1].split("mins")[0])
                    else:
                        cocktail["total_prepared_time(min)"] = int(total_prepared_time.split(" mins")[0])

            # step4: how many people rate the cocktail?
            next_page_source_2 = soup2.find("div", {"class": "comp aggregate-star-rating__count mntl-aggregate-rating mntl-text-block"})
            if next_page_source_2 == None:
                rating_times = "NA"
            else:
                rating_times = next_page_source_2.string.split(" ")[0]
                rating_times = rating_times.replace("\n", "")
                if rating_times == "ratings":
                    cocktail["rating_times"] = "NA"  # ex:Adonis
                else:
                    cocktail["rating_times"] = int(rating_times)

            # step5: rating
            next_page_source_3 = soup2.find("div", {"class": "comp aggregate-star-rating__stars mntl-aggregate-star-rating mntl-rating"})
            if next_page_source_3 == None:
                cocktail["rating"] = "NA"
            else:
                m = 0
                for active in next_page_source_3.select("a.active"):
                    m = m + 1
                for half in next_page_source_3.select("a.half"):
                    m = m + 0.5
                cocktail["rating"] = m

            # step6: count steps
            next_page_source_4 = soup2.findAll("li", {"class": "comp mntl-sc-block-group--LI mntl-sc-block mntl-sc-block-startgroup"})
            if next_page_source_4 == None:
                cocktail["steps"] = "NA"
            else:
                n = 0
                for i in next_page_source_4:
                    n = n + 1
                cocktail["steps"] = n

            # step7: ingredients"
            quantifiers = ["ounces", "ounce", "dashes", "Dash of", "dash of ", "Dash" ,"dash", "pinch of", "parts", "part", "ml", "mL", "drops of","drop of",
                           "cups", "cup", "teaspoons", "teaspoon", "splashes", "splash", "tablespoons", "tablespoon", "Garnish:", "slices", "slice"]  # 複數要擺前面
            ingredient = []
            for ingredients in soup2.findAll("li", {"class": "simple-list__item js-checkbox-trigger ingredient text-passage"}):
                tmp = ingredients.text
                if "Optional" in tmp:  # ignore optional choice
                    pass
                elif "For" in tmp:
                    pass
                else:
                    for quantifier in quantifiers:
                        if quantifier in tmp:
                            tmp = tmp.split(quantifier)[-1]  # 分割量詞
                            break  # 分割一次就停止，量詞通常只有一個

                    # 處理材料後的括弧及括弧內的形容詞
                    if '(' in tmp:
                        tmp = tmp.split('(')[0]
                    if '(' in ingredient:
                        tmp = tmp.split(')')[0]

                    # 簡單處理 or ，選前面的 # and 不能隨便亂處理 EX: half and half
                    if ' or ' in tmp:  # or前後要有空白
                        tmp = tmp.split('or')[0]

                    # deal with 跳脫字元
                    tmp = tmp.replace('\n', '').replace('\u200b', '').replace('\xa0', '')

                    if "to" in tmp:
                        tmp = tmp.replace("to", "")
                    if "large" in tmp:
                        tmp = tmp.replace("large", "")
                    if "/" in tmp:
                        tmp = tmp.replace("/", "")
                    for k in range(9):
                        if str(k) in tmp:
                            tmp = tmp.replace(str(k), "")
                    if " " in tmp:  # deal with space
                        if tmp[0] == " ":
                            tmp = tmp[1:]
                    # 材料多個放一行
                    if "," in tmp:
                        for p in tmp.split(", "):  # 多種材料的list
                            ingredient.append(p)
                        if " " in tmp:  # deal with space
                            if tmp[0] == " ":
                                tmp = tmp[1:]
                    else:
                        if tmp == []:  # 處理空字串時候
                            pass
                        else:
                            ingredient.append(tmp)

            cocktail["ingredient"] = ingredient
            
            # print(cocktail["ingredient"])

            f.write(str(cocktail))
f.close()

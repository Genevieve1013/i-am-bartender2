import requests
from bs4 import BeautifulSoup
url1_doc = requests.get("https://www.thespruceeats.com/a-to-z-cocktail-recipes-3962886")
soup1 = BeautifulSoup(url1_doc.text, "html.parser")

if url1_doc.status_code == 200:  # confirm status is successful
    for ul in soup1.findAll("ul", {
        "class": "comp text-passage ordered-list__content-description mntl-sc-block mntl-sc-block-html"}):
        for li in ul.findAll("li"):
            cocktail = {}  # {name, base_wine, total prepared time, rating times, rating, steps, ingredients[ , , ]}
            # (1) find name and base wine
            # (1.1) deal with "name and base wine" with ()
            if "(" in li.text:
                cocktail["name"] = li.text.split("(")[0].replace('\n', '').replace('\u200b', '').replace('\xa0', '').strip()
                # (1.1.1) deal with lots of base wine
                if "," in li.text.split("(")[-1].split(")")[0]:
                    for o in li.text.split("(")[-1].split(")")[0].split(", "):  # (rum, tequila, vodka, and whiskey)
                        cocktail["base_wine"] = o.replace('\n', '').replace('\u200b', '').replace('\xa0', '').replace(
                            'and', '').strip()
                elif " and " in li.text.split("(")[-1].split(")")[0]:  # (brandy and rum) keep space
                    for k in li.text.split("(")[-1].split(")")[0].split(" and "):  # catious brandy! & grand marnier
                        cocktail["base_wine"] = k.replace('\n', '').replace('\u200b', '').replace('\xa0', '').strip()
                elif " or " in li.text.split("(")[-1].split(")")[0]:  # deal with "or" choose first one  # catious for "Midori", "Southern Comfort", "brandy or whiskey"
                    cocktail["base_wine"] = li.text.split("(")[-1].split(")")[0].split("or")[0].strip()
                    
                # (1.1.2) deal with single base wine
                else:
                    cocktail["base_wine"] = li.text.split("(")[-1].split(")")[0].strip()
                
            # (1.2) deal with "name and base wine" without ()
            else:
                cocktail["name"] = li.text.replace('\n', '').replace('\u200b', '').replace('\xa0', '')
                cocktail["base_wine"] = "NA".replace('\n', '').replace('\u200b', '').replace('\xa0', '').strip()  # deal with shot!
            if cocktail["base_wine"] == "NA":  # del with "NA" one
                cocktail.clear()
                break
            else:
                # (2) go to next page, including recipes and other information
                url2_doc = requests.get(li.find("a")['href'])
                soup2 = BeautifulSoup(url2_doc.text, "html.parser")

                # (3) how much is total prepared time?
                next_page_source_1 = soup2.find("div", {"class": "loc total-time project-meta__total-time"})
                if next_page_source_1 == None:  # deal with irregular pattern
                    cocktail["total_prepared_time(min)"] = "NA"
                else:
                    next_page_source_1 = next_page_source_1.find("span", {"class": "meta-text__data"})
                    for total_prepared_time in next_page_source_1:
                        if "hrs" in total_prepared_time:
                            cocktail["total_prepared_time(min)"] = int(total_prepared_time.split(" hrs")[0]) * 60 + int((total_prepared_time.split(" hrs")[1]).split("mins")[0])
                        elif "hr" in total_prepared_time:
                            cocktail["total_prepared_time(min)"] = int(total_prepared_time.split(" hr")[0]) * 60 + int(total_prepared_time.split(" mins")[-1].split("mins")[0])
                        else:
                            cocktail["total_prepared_time(min)"] = int(total_prepared_time.split(" mins")[0])
                if cocktail["total_prepared_time(min)"] == "NA":  # del with "NA" one
                    cocktail.clear()
                    break
                else:
                    # (4) how many people rate the cocktail?
                    next_page_source_2 = soup2.find("div", {"class": "comp aggregate-star-rating__count mntl-aggregate-rating mntl-text-block"})
                    if next_page_source_2 == None:
                        cocktail["rating_times"] = "NA"
                    else:
                        rating_times = next_page_source_2.string.split(" ")[0]
                        rating_times = rating_times.replace("\n", "")
                        if rating_times == "ratings":
                            cocktail["rating_times"] = "NA"  # ex:Adonis
                        else:
                            cocktail["rating_times"] = int(rating_times)
                    if cocktail["rating_times"] == "NA":  # del with "NA" one
                        cocktail.clear()
                        break
                    else:
                        # (5) rating
                        next_page_source_3 = soup2.find("div", {"class": "comp aggregate-star-rating__stars mntl-aggregate-star-rating mntl-rating"})
                        if next_page_source_3 == None:
                            cocktail["rating"] = "NA"
                        else:
                            m = 0
                            for active in next_page_source_3.select("a.active"):
                                m = m + 1
                            for half in next_page_source_3.select("a.half"):
                                m = m + 0.5
                            cocktail["rating"] = m
                        if cocktail["rating"] == "NA":  # del with "NA" one
                            cocktail.clear()
                            break
                        else:
                            # (6) count steps
                            next_page_source_4 = soup2.findAll("li", {"class": "comp mntl-sc-block-group--LI mntl-sc-block mntl-sc-block-startgroup"})
                            if next_page_source_4 == None:
                                cocktail["steps"] = "NA"
                            else:
                                n = 0
                                for i in next_page_source_4:
                                    n = n + 1
                                cocktail["steps"] = n
                            if cocktail["steps"] == "NA":  # del with "NA" one
                                cocktail.clear()
                                break
                            else:
                                # (7) ingredients
                                quantifiers = ["ounces", "ounce", "dashes", "Dash of", "dash of ", "Dash", "dash", "pinch of", "parts", "part", "ml", "mL", "drops of", "drop of", "bottles of", "bottle of", "strings of", "string of",
                                               "cups", "cup", "teaspoons", "teaspoon", "splashes", "splash", "tablespoons", "tablespoon", "Garnish:", "slices", "slice", "proofs", "proof", "sprigs of", "sprig of"]  # 複數要擺前面
                                ingredient = []
                                for ingredients in soup2.findAll("li", {"class": "simple-list__item js-checkbox-trigger ingredient text-passage"}):
                                    tmp = ingredients.text
                                    if "Optional" in tmp:  # ignore optional choice
                                        break
                                    elif "For" in tmp:  # ignore For...
                                        break
                                    else:
                                        for quantifier in quantifiers:
                                            if quantifier in tmp:
                                                tmp = tmp.split(quantifier)[-1]  # 分割量詞
                                                break  # 基於量詞通常只有一個，故設定分割一次就跳出迴圈

                                        # 處理材料後的括弧及括弧內的形容詞 
                                        if '(' in tmp:
                                            tmp = tmp.split('(')[0]
                                        if '(' in ingredient:
                                            tmp = tmp.split(')')[0]

                                        # deal with "or" choose first # cautious for "and"  EX: half and half
                                        if ' or ' in tmp:  # or前後要有空白
                                            tmp = tmp.split('or')[0]

                                        # deal with 跳脫字元
                                        tmp = tmp.replace('\n', '').replace('\u200b', '').replace('\xa0', '').strip()

                                        if "to" in tmp:
                                            tmp = tmp.replace("to", "").strip()
                                        if "large" in tmp:
                                            tmp = tmp.replace("large", "").strip()
                                        if "/" in tmp:
                                            tmp = tmp.replace("/", "").strip()
                                        for k in range(9):
                                            if str(k) in tmp:
                                                tmp = tmp.replace(str(k), "").strip()

                                        # 材料多個放一行
                                        if "," in tmp:
                                            for p in tmp.split(", "):  # 多種材料的list
                                                p = p.strip()
                                                ingredient.append(p)
                                        else:
                                            if tmp != "":  # 處理當無材料，空字串時
                                                ingredient.append(tmp)  # 塞回去list of ingredients

                                        # 處理某一個材料為空集合
                                        j = 0
                                        for z in ingredient:
                                            j = j + 1
                                            if z == "":
                                               del ingredient[j-1]

                                        cocktail["ingredient"] = ingredient  # Tequila Shot
                                        
                                        # 處理所有材料為空集合
                                        if ingredient == []:  
                                            cocktail.clear()
                                            break
                                print(cocktail, end=" \n", file=open("cocktails_recipes.text", "a"))
